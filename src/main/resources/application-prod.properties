# Base de datos PostgreSQL para Render
# En lugar de DATABASE_URL, usar variables separadas
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Server configuration
server.port=${PORT:8080}

# Cloudinary configuration
cloud.name=${CLOUDINARY_NAME}
cloud.key=${CLOUDINARY_KEY}
cloud.secret=${CLOUDINARY_SECRET}

# FORZAR PostgreSQL explícitamente
spring.datasource.hikari.driver-class-name=org.postgresql.Driver

# Configuración adicional
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# Deshabilitar data.sql por ahora (puede estar causando conflicto)
spring.sql.init.mode=never

# Server configuration
server.port=${PORT:8080}

# Cloudinary configuration
cloud.name=${CLOUDINARY_NAME}
cloud.key=${CLOUDINARY_KEY}
cloud.secret=${CLOUDINARY_SECRET}

# Logging
logging.level.org.hibernate.SQL=ERROR
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=ERROR
logging.level.com.arpo=INFO